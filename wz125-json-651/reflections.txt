Self-reflection:
1.
Was there any particular type of task you overestimated/underestimated time for? 
Can you say anything about what types of tasks you find especially hard to estimate? Do you have any insight into why?

I underestimated the time for completing serialization and deserialization. Since when I made this plan I didn't know the specific details of implementing these two parts. Finally, it took me a long time to truly understand how it works, how to design and implement it. If we do not have such kinds of knowledge, like what the JSON file like, what the serialization means, it is really hard to estimate it. It is only when we really understand what each task does and how logically we intend to implement it that we can estimate the required time more accurately.

2.
How well did you meet your intermediate deadlines?

I only follow part of the deadline, because in the implementation process, I will find that many times the previous plan is not specific or feasible, so I will keep revising. At the same time, there may be some reasons for not being able to follow the schedule.

3.
Suppose your customer were to change the requirements now. How easy/hard would
      it be to accommodate the following changes.  Why are these easy or hard?
        o Instead of just producing Java code, your program must now
          be accept an option for what language to produce code in: Java,
          Python, or C++.
        o In addition to accepting JSON specifications for the classes to produce,
          your program must also be able to accept XML files.
        o Your generated classes must be able to serialize/deserialize into XML
          as well as JSON

If someone want to change the requirement, it is not very easy to accomodate in my code. The general structure will not change much, but some details will be changed. Because the hard code part is different for each language.  

4.
As you have been doing this assignment, you have been learning a lot more about object-oriented design.  If you had known at the start what you know now, would you have done anything differently?  Would any of the design patterns we learned about in class have worked well in this assignment?

I need to have a good plan in details. And, I won't just have a general idea and start to implement. At the same time, avoid generating multiple private fields in a class and generate get functions to exchange variables between different classes. Also, since the time is not very enough for this project, I cannot design the implementation concretely and think about the design principles. I think that I just follow the single responsibility principle. 

5. 
What lessons did you learn from doing this assignment?  How will it inform your future software development in this class, other classes, and/or your professional life?

I got a taste of how to break down a large project into smaller, executable parts. Of course, on the premise of being able to properly decompose tasks, I need to have a better understooding of the specific implementation in each step. There are always unforeseen problems in the implementation. This project makes me think that break down is really important. In the future courses, we should also pay attention to these aspects, because what we need to achieve in the future is not just a simple small task, but a relatively large project that requires the cooperation of many people. So, it is important to have a deep understanding of each part before we
